name: example-command
on:
  repository_dispatch:
    types: [example-command]

jobs:
  example:
    runs-on: ubuntu-latest
    steps:
      # ‚úÖ React ‡∏ó‡∏µ‡πà comment ‡πÄ‡∏î‡∏¥‡∏°
      - name: Add reaction
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          comment-id: ${{ github.event.client_payload.github.payload.comment.id }}
          reactions: hooray

      # ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á comment ‡πÅ‡∏à‡πâ‡∏á Jenkins rebuild
      - name: Create new comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          issue-number: ${{ github.event.client_payload.github.payload.issue.number }}
          body: |
            üöÄ Jenkins rebuild triggered!
            - PR: #${{ github.event.client_payload.github.payload.issue.number }}
            - By: @${{ github.event.client_payload.github.actor.login }}
            - PR URL: ${{ github.event.client_payload.github.payload.issue.pull_request.url }}

      # ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• PR ‡∏à‡∏≤‡∏Å GitHub API (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ branch)
      - name: Fetch PR Info
        id: pr-info
        run: |
          pr_number=${{ github.event.client_payload.github.payload.issue.number }}
          repo=${{ github.event.client_payload.github.payload.repository.full_name }}

          response=$(curl -s -H "Authorization: token ${{ secrets.PAT }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/$repo/pulls/$pr_number)

          echo "title=$(echo "$response" | jq -r '.title')" >> $GITHUB_OUTPUT
          echo "html_url=$(echo "$response" | jq -r '.html_url')" >> $GITHUB_OUTPUT
          echo "source_branch=$(echo "$response" | jq -r '.head.ref')" >> $GITHUB_OUTPUT
          echo "target_branch=$(echo "$response" | jq -r '.base.ref')" >> $GITHUB_OUTPUT

      # ‚úÖ Comment JSON ‡∏Å‡πâ‡∏≠‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß (‡∏°‡∏µ branch ‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß)
      - name: Post Jenkins Variables (with branches)
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          issue-number: ${{ github.event.client_payload.github.payload.issue.number }}
          body: |
            {
              "action": "reopened",
              "number": ${{ github.event.client_payload.github.payload.issue.number }},
              "pull_request": {
                "title": "${{ steps.pr-info.outputs.title }}",
                "html_url": "${{ steps.pr-info.outputs.html_url }}",
                "head": {
                  "ref": "${{ steps.pr-info.outputs.source_branch }}",
                  "repo": {
                    "name": "${{ github.event.client_payload.github.payload.repository.name }}",
                    "clone_url": "${{ github.event.client_payload.github.payload.repository.clone_url }}"
                  }
                },
                "base": {
                  "ref": "${{ steps.pr-info.outputs.target_branch }}"
                }
              },
              "repository": {
                "full_name": "${{ github.event.client_payload.github.payload.repository.full_name }}"
              }
            }
